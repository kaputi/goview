package gui

import (
	"github.com/kaputi/sudokugo/theme"
	"github.com/kaputi/sudokugo/view"
)

func SudokuToViewCoord(row, col int) (int, int) {
	return 1 + row*2, 2 + col*4
}

func GridImage(class string, t *theme.Theme) *view.Image {
	gridImage := view.NewImage(19, 37)

	// strImage := [][]string{
	// 	{"╔", "═", "═", "═", "╤", "═", "═", "═", "╤", "═", "═", "═", "╦", "═", "═", "═", "╤", "═", "═", "═", "╤", "═", "═", "═", "╦", "═", "═", "═", "╤", "═", "═", "═", "╤", "═", "═", "═", "╗"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╟", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╢"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╟", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╢"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╠", "═", "═", "═", "╪", "═", "═", "═", "╪", "═", "═", "═", "╬", "═", "═", "═", "╪", "═", "═", "═", "╪", "═", "═", "═", "╬", "═", "═", "═", "╪", "═", "═", "═", "╪", "═", "═", "═", "╣"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╟", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╢"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╟", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╢"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╠", "═", "═", "═", "╪", "═", "═", "═", "╪", "═", "═", "═", "╬", "═", "═", "═", "╪", "═", "═", "═", "╪", "═", "═", "═", "╬", "═", "═", "═", "╪", "═", "═", "═", "╪", "═", "═", "═", "╣"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╟", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╢"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╟", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╫", "─", "─", "─", "┼", "─", "─", "─", "┼", "─", "─", "─", "╢"},
	// 	{"║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║", " ", " ", " ", "│", " ", " ", " ", "│", " ", " ", " ", "║"},
	// 	{"╚", "═", "═", "═", "╧", "═", "═", "═", "╧", "═", "═", "═", "╩", "═", "═", "═", "╧", "═", "═", "═", "╧", "═", "═", "═", "╩", "═", "═", "═", "╧", "═", "═", "═", "╧", "═", "═", "═", "╝"},
	// }

	chars := t.GetChars()
	dCorner := chars.DoubleCorners
	dH := chars.DoubleHorizontal
	sH := chars.SingleHorizontal
	sV := chars.SingleVertical
	dV := chars.DoubleVertical
	dtsTee := chars.DoubleSideToSingleTee
	dTee := chars.DoubleTee
	sCross := chars.SingleCross
	dCross := chars.DoubleCross
	dVsH := chars.DoubleVerticalSingleHorizontal
	dHsV := chars.DoubleHorizonatlSingleVertical

	topRow := []string{dCorner[0], dH, dH, dH, dtsTee[2], dH, dH, dH, dtsTee[2], dH, dH, dH, dTee[2], dH, dH, dH, dtsTee[2], dH, dH, dH, dtsTee[2], dH, dH, dH, dTee[2], dH, dH, dH, dtsTee[2], dH, dH, dH, dtsTee[2], dH, dH, dH, dCorner[1]}
	sepRow := []string{dtsTee[0], sH, sH, sH, sCross, sH, sH, sH, sCross, sH, sH, sH, dVsH, sH, sH, sH, sCross, sH, sH, sH, sCross, sH, sH, sH, dVsH, sH, sH, sH, sCross, sH, sH, sH, sCross, sH, sH, sH, dtsTee[1]}
	dSepRow := []string{dTee[0], dH, dH, dH, dHsV, dH, dH, dH, dHsV, dH, dH, dH, dCross, dH, dH, dH, dHsV, dH, dH, dH, dHsV, dH, dH, dH, dCross, dH, dH, dH, dHsV, dH, dH, dH, dHsV, dH, dH, dH, dTee[1]}
	numRow := []string{dV, " ", " ", " ", sV, " ", " ", " ", sV, " ", " ", " ", dV, " ", " ", " ", sV, " ", " ", " ", sV, " ", " ", " ", dV, " ", " ", " ", sV, " ", " ", " ", sV, " ", " ", " ", dV}
	botRow := []string{dCorner[2], dH, dH, dH, dtsTee[3], dH, dH, dH, dtsTee[3], dH, dH, dH, dTee[3], dH, dH, dH, dtsTee[3], dH, dH, dH, dtsTee[3], dH, dH, dH, dTee[3], dH, dH, dH, dtsTee[3], dH, dH, dH, dtsTee[3], dH, dH, dH, dCorner[3]}

	strImage := [][]string{
		topRow, ////
		numRow,
		sepRow, //
		numRow,
		sepRow, //
		numRow,
		dSepRow, ////
		numRow,
		sepRow, //
		numRow,
		sepRow, //
		numRow,
		dSepRow, ////
		numRow,
		sepRow, //
		numRow,
		sepRow, //
		numRow,
		botRow, ////
	}

	gridImage.SetValueWithData(strImage)

	color := t.GetClassColor(class)
	gridImage.SetImageColor(color)
	return gridImage
}
